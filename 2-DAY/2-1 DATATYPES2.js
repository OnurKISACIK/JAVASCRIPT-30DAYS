//*----------------  DATA TYPES   ------------------- */
//* DATA OR VALUSES HAVE DATE TYPES.
//* DATA TYPES DESCRIBE THE CHARACTESISTICS OF DATA
//* TWO TYPE OF DATA TYPES

//? PRIMITIVE DATA TYPES
//? NON-PRIMITIVE DATA TYPES

//* ---- PRIMITIVE DATA TYPES ----*/

//* - NUMBERS (INTEGERS,FLOATS)
//* - STRINGS (ANY DATA TYPE WITH IN ``,'',"")
//* - BOOLEANS (TRUE OR FALSE VALUE)
//* - NULL (EMPTY VALUE OR NO VALUE)
//* - UNDEFINED (DECLARED VARIABLE WITHOUT ANY VALUE)

//* ---- NON-PRIMITIVE DATA TYPES ----*/

//* - OBJECTS
//* - ARRAYS

//* WHAT IS THE DIFFERENCE BETWEEN PRIMITIVE AND NON PRIMITIVE DATA TYPES.
//* PRIMITIVE DATA TYPES ARE IMMUTABLE DATA TYPES.
//! ONCE PRIMITVE DATA TYOE IS CREATED WE CAN NOT MODIFY IT

//* Let world= "JavaScript"

//* IF WE TRY TO MODIFY THE STRING STORED IN
//* VARIABLE "WORD", JAVASCRIPT SHOULD GIVE AN ERROR.
//* ANY DATA TYPES UNDER A SINGLE QUOTES, DOUBLE QUOTES
//* OR BACKTICK QUOTE IS A STRING DATA TYPES

let word = "python";
word[0] = "y";

//* IT IS NOT POSSIBLE TO MODIFY

//* IN THIS MOMENT WE CAN SAY THAT "STRINGS " ARE NOT MODIFIABLE

//* PRIMITIVE DATA TYPES ARE COMPARED BY IT VALUES.
//* LET US TO COMPARE DIFFERENT DATA VALUES.

let number = 3;
let number1 = 3;
console.log(number == number1);

//? TRUE

let js = "JavaScript";
let py = "Python";
console.log(js == py);

//? FALSE

//* ---- NON-PRIMITIVE DATA TYPES ----*/

//* NON PRIMITIVE DATA TYPES ARE MODIFIABLE OR MUTABLE
//* WE CAN MODIFY THE VALUE OF TEH NON PRIMITIVE DATA
//* TYPES AFTER IT GET CREATED LETS CREATE AN ARRAY

//* AN "ARRAY" IS LIST OF THE DATAVALUES IN A SQUAREBRAKETS
//* ARRAY CAN BE CONTAIN THE SAME OR DIFFERNT DATA TYPES.
//* ARRAY VALUES ARE REFERRENCED BY THEIR INDEX.
//* IN JAVA SCRIPT ARRAY INDEX STARTS AT "ZERO, 0"
//* THE FIRST ELEMENT OF AN ARRAY IS FOUND INDEX 0 SECOND FIND
//* INDEX 1 THIRD IS INDEX 2

let nums = [1, 2, 3];
nums[0] = 10;
console.log(nums);

//? [10,2,3]

//* AS WE CAN SEE AN ARRAY WHICH IS NON-PRIMITIVE DATA TYPES IS MUTABLE
//* NON-PRIMITIVE DATA TYPES CANNOT BE COMPARED BY VALUE ***
//* EVEN IF TWO NON-PRIMITIVE DATA TYPES HAVE THESAME PROPERTIES AND VALUES
//! THEY ARE NOT STRICKLY EQUAL

let nums2 = [1, 2, 3];
let nums3 = [1, 2, 3];
console.log(nums2 == nums3);

//? FALSE

let userOne = {
  name: "onur",
  role: "teacher"
};
let userOneTwo = {
  name: "onur",
  role: "teacher"
};

console.log(userOne == userOneTwo);

//? FALSE

//* RULE OF THE HUMB, WE DONOT COMPARE NON-PRIMITIVE DATA TYPES
//! DO NOT COMPARE ANY ARRAY,FUNCTION OR OBJECTS

//* NON-PRIMITIVE VALUES ARE REFFERED TO AS REFERENCE TYPES,
//* BECAUSE THEY ARE BEING COMPARED BY REFFERENCE INSTEAD OF VALUE

//* TWO OBJECTS ARE ONLY STRICTLY EQUEAL IF THEY EFERE TO THE SAME UNDERLYING OBJECT !!!

let nums4 = [1, 2, 3];
let nums5 = nums4;
console.log(nums4 == nums5);

//? TRUE

//*------------------------*/

let user1 = {
  name: "Paul",
  role: "police",
  country: "finland"
};

let user3 = user1;
console.log(user1 == user3);

//? TRUE
